name: Build and Release Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '17'
  GRADLE_VERSION: '8.9'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: gradle

    - name: Cache Gradle Dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3

    - name: Make gradlew executable
      run: chmod +x ./gradlew || echo "gradlew not found, will generate"

    - name: Generate Gradle Wrapper if missing
      run: |
        if [ ! -f "./gradlew" ]; then
          echo "Gradle wrapper not found, generating..."
          gradle wrapper --gradle-version=${{ env.GRADLE_VERSION }}
          chmod +x ./gradlew
          echo "Gradle wrapper generated successfully"
        else
          echo "Gradle wrapper found, continuing..."
        fi

    - name: Verify Gradle Installation
      run: ./gradlew --version

    - name: Decode Android Keystore
      if: github.ref == 'refs/heads/main'
      env:
        ENCODED_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
      run: |
        if [ -z "$ENCODED_KEYSTORE" ]; then
          echo "Warning: ANDROID_KEYSTORE secret not found"
          echo "Building unsigned APK..."
        else
          echo $ENCODED_KEYSTORE | base64 -d > keystore.jks
          echo "Keystore decoded successfully"
        fi

    - name: Build Debug APK
      run: ./gradlew assembleDebug --stacktrace --no-daemon

    - name: Build Release APK (Signed)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: |
        if [ -f "keystore.jks" ]; then
          echo "Building signed release APK..."
          ./gradlew assembleRelease --stacktrace --no-daemon
        else
          echo "No keystore found, building unsigned release APK..."
          ./gradlew assembleRelease --stacktrace --no-daemon
        fi

    - name: Upload Debug APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: gpt-oss-debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30

    - name: Upload Release APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: gpt-oss-release-apk
        path: app/build/outputs/apk/release/app-release.apk
        retention-days: 90

    - name: Get Version Info
      id: version
      run: |
        echo "date=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT
        echo "version=v1.0.${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT
        echo "commit_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Create Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: GPT-OSS Chat ${{ steps.version.outputs.version }}
        body: |
          ## üöÄ GPT-OSS Chat Release ${{ steps.version.outputs.version }}
          
          **Build Date:** ${{ steps.version.outputs.date }}
          **Commit:** ${{ steps.version.outputs.commit_short }}
          
          ### üì± Installation Instructions:
          1. Download the APK file below
          2. Enable "Install from Unknown Sources" in your Android settings
          3. Install the APK file
          4. Launch GPT-OSS Chat and start chatting!
          
          ### üîß Technical Details:
          - **API Integration:** Hugging Face amd/gpt-oss-120b-chatbot
          - **Build System:** Gradle ${{ env.GRADLE_VERSION }}
          - **Target SDK:** 34 (Android 14)
          - **Minimum SDK:** 24 (Android 7.0)
          
          ### üìù Changes:
          ${{ github.event.head_commit.message }}
          
          ---
          Built automatically with GitHub Actions ‚ö°
        draft: false
        prerelease: false
        files: app/build/outputs/apk/release/app-release.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload APK to Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        files: |
          app/build/outputs/apk/release/app-release.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Notify Build Result
      run: |
        if [ "${{ needs.build.result }}" == "success" ]; then
          echo "‚úÖ Build completed successfully!"
        else
          echo "‚ùå Build failed!"
        fi
